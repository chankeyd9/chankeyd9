<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech-notes on cq</title>
    <link>https://chenqian.ink/tags/Tech-notes/</link>
    <description>Recent content in Tech-notes on cq</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://chenqian.ink/tags/Tech-notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL notes</title>
      <link>https://chenqian.ink/Gazebo/Hello-SQL/sql-notes/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://chenqian.ink/Gazebo/Hello-SQL/sql-notes/</guid>
      <description>Hello SQL目的聚焦高效简洁查询，忽略数据库管理控制
目录浅析Oracle空间架构：解决怎么熟悉你的查询对象熟悉表查询语言：解决在查询对象中怎么查询数据浅析Oracle空间架构大型仓库将仓库空间划分为n份，租个各公司使用，每个租用的公司又将自己的仓库分为几个小房间，然后每个租用的公司会派出管理员管理小房间。那查询数据的过程就是，管理员去被授权的n个小房间里，找出物品的过程。
大型仓库即Oracle语境下（下同）的数据仓库，可以看作整个Oracle就只有一个数据仓库；单个公司的仓库空间即数据库，包含两个部分，1是物理数据存储在硬盘中，即所有物品；2是对物理数据的访问和使用的进程存在于内存之中，称作实例（Instance），即租用公司对物品的所有管理过程本身；小房间即表空间（Tablespace），每一个被查询的表数据就在表空间里面；物品即表（Table），数据以表（二维）的形式呈现；管理员即用户（Users），管理员受租用公司管理，可授权其管理哪几个小房间。物品由管理员管理（包括送进来Create，运出去Drop，拿下来看看Query）；Oracle逻辑是用户和表空间来管理和存储数据，Oracle的用户是在数据库（实例部分）之内的，所以很讲究用户的数据库所属。经常表示为“用户名@数据库名”。为了查询的话，需要：
用正确的用户登录进正确的数据库，才能select出你需要的数据。（如下图为PL/SQL登录界面）PLSQL
上图的“连接为”对应的选项用户层级，就是一般用户，系统管理员用户等。
得知道这个数据库以及用户总共物理存储了或者被授权了哪些表select table_name from dba_tables -- 系统所有的表，dba是系统管理员select table_name from all_tables -- 数据库所有的表 select table_name from user_tables -- 用户被授权的所有表得知道某个表的所有列名以及列的属性select column_name, data_type from user_tab_columns where table_name = &amp;#39;指定的表名&amp;#39;select * from &amp;#39;指定的表名&amp;#39; where rownum &amp;lt;= 5 -- 看看前五行的数据熟悉表查询语言1.</description>
    </item>
    
    <item>
      <title>Git常见命令备忘</title>
      <link>https://chenqian.ink/Gazebo/git-code/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chenqian.ink/Gazebo/git-code/</guid>
      <description>1. Git 是什么 Git 是用来作版本控制的，类似于解决跟小伙伴一起协作的Word文档，00版，01版……99版。Git怎么解决这个问题的呢？
 远程库：设立在Github上； 本地库：本地电脑的某个文件夹； 创建Git语言：  本地库和远程库的上下相互，支持多人； 自动记录所有的更改版本，并注明几页几行进行了修改； 支持回退到某个版本； 要求在提交新版本时，同时提交版本变动的梗概信息，方便他人协作。   免费，开源。  2. Git常见代码 创建本地库，在文件夹右击，Git Bash Here
git init把某个文件上传到本地库的缓存区
git add &amp;lt;某个文件名&amp;gt; # 添加单个文件git add . # 添加所有文件让Git意识到内容更新
git commit -m &amp;quot;此版本修改梗概说明&amp;quot;创建远程库，注册Github，建立一个repository，Github会给出这个远程库地址。
git remote add origin &amp;quot;https://homepage/chenqian.git&amp;quot; # 跟远程库建立联系把文件夹推送到远程库
git push origin master从远程库到本地库
git clone &amp;quot;https://homepage/chenqian.git&amp;quot;3. Git 非常见代码备忘 涉及SSL证书错误问题
git config --global http.sslVerify &amp;quot;false&amp;quot;涉及ref error
git pull –-rebase origin master以上，供备忘。</description>
    </item>
    
  </channel>
</rss>
